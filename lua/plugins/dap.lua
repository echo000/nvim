return {
    -- {
    --     "mfussenegger/nvim-dap",
    --     dependencies = {
    --         -- fancy UI for the debugger
    --         {
    --             "rcarriga/nvim-dap-ui",
    --             event = "VeryLazy",
    --             dependencies = { "nvim-neotest/nvim-nio" },
    --             keys = {
    --                 {
    --                     "<leader>du",
    --                     function()
    --                         require("dapui").toggle({})
    --                     end,
    --                     desc = "Dap UI",
    --                 },
    --                 {
    --                     "<leader>de",
    --                     function()
    --                         require("dapui").eval()
    --                     end,
    --                     desc = "Eval",
    --                     mode = { "n", "v" },
    --                 },
    --             },
    --             config = function()
    --                 local dap = require("dap")
    --                 local dapui = require("dapui")
    --                 dapui.setup({
    --                     controls = {
    --                         element = "repl",
    --                         enabled = true,
    --                         icons = {
    --                             disconnect = "",
    --                             pause = "",
    --                             play = "",
    --                             run_last = "",
    --                             step_back = "",
    --                             step_into = "",
    --                             step_out = "",
    --                             step_over = "",
    --                             terminate = "",
    --                         },
    --                     },
    --                     element_mappings = {},
    --                     expand_lines = true,
    --                     floating = {
    --                         border = "single",
    --                         mappings = {
    --                             close = { "q", "<Esc>" },
    --                         },
    --                     },
    --                     force_buffers = true,
    --                     icons = {
    --                         collapsed = "",
    --                         current_frame = "",
    --                         expanded = "",
    --                     },
    --                     layouts = {
    --                         {
    --                             elements = {
    --                                 {
    --                                     id = "console",
    --                                     size = 0.2,
    --                                 },
    --                                 {
    --                                     id = "breakpoints",
    --                                     size = 0.2,
    --                                 },
    --                                 {
    --                                     id = "stacks",
    --                                     size = 0.2,
    --                                 },
    --                                 {
    --                                     id = "repl",
    --                                     size = 0.2,
    --                                 },
    --                                 {
    --                                     id = "watches",
    --                                     size = 0.2,
    --                                 },
    --                             },
    --                             position = "left",
    --                             size = 50,
    --                         },
    --                         {
    --                             elements = {
    --                                 {
    --                                     id = "scopes",
    --                                     size = 1,
    --                                 },
    --                             },
    --                             position = "bottom",
    --                             size = 10,
    --                         },
    --                     },
    --                     mappings = {
    --                         edit = "e",
    --                         expand = { "<CR>", "<2-LeftMouse>" },
    --                         open = "o",
    --                         remove = "d",
    --                         repl = "r",
    --                         toggle = "t",
    --                     },
    --                     render = {
    --                         indent = 1,
    --                         max_value_lines = 100,
    --                     },
    --                 })
    --
    --                 ------------
    --                 -- Dap UI --
    --                 ------------
    --
    --                 dap.listeners.after.event_initialized["dapui_config"] = function()
    --                     dapui.open({})
    --                 end
    --                 dap.listeners.before.event_terminated["dapui_config"] = function()
    --                     dapui.close({})
    --                 end
    --                 dap.listeners.before.event_exited["dapui_config"] = function()
    --                     dapui.close({})
    --                 end
    --             end,
    --         },
    --         {
    --             "jay-babu/mason-nvim-dap.nvim",
    --             event = "VeryLazy",
    --             dependencies = {
    --                 "williamboman/mason.nvim",
    --                 "mfussenegger/nvim-dap",
    --             },
    --             opts = {
    --                 handlers = {},
    --             },
    --         },
    --         -- virtual text for the debugger
    --         {
    --             "theHamsta/nvim-dap-virtual-text",
    --             opts = {},
    --         },
    --
    --         -- which key integration
    --         {
    --             "folke/which-key.nvim",
    --             optional = true,
    --             opts = {
    --                 spec = {
    --                     { "<leader>d", group = "debug" },
    --                 },
    --             },
    --         },
    --     },
    --     -- stylua: ignore
    --     keys = {
    --         { "<leader>d", "", desc = "+debug", mode = {"n", "v"} },
    --         { "<leader>dB", function() require("dap").set_breakpoint(vim.fn.input('Breakpoint condition: ')) end, desc = "Breakpoint Condition" },
    --         { "<leader>db", function() require("dap").toggle_breakpoint() end, desc = "Toggle Breakpoint" },
    --         { "<leader>dc", function() require("dap").continue() end, desc = "Continue" },
    --         { "<leader>da", function() require("dap").continue({ before = get_args }) end, desc = "Run with Args" },
    --         { "<leader>dC", function() require("dap").run_to_cursor() end, desc = "Run to Cursor" },
    --         { "<leader>dg", function() require("dap").goto_() end, desc = "Go to Line (No Execute)" },
    --         { "<leader>di", function() require("dap").step_into() end, desc = "Step Into" },
    --         { "<leader>dj", function() require("dap").down() end, desc = "Down" },
    --         { "<leader>dk", function() require("dap").up() end, desc = "Up" },
    --         { "<leader>dl", function() require("dap").run_last() end, desc = "Run Last" },
    --         { "<leader>do", function() require("dap").step_out() end, desc = "Step Out" },
    --         { "<leader>dO", function() require("dap").step_over() end, desc = "Step Over" },
    --         { "<leader>dp", function() require("dap").pause() end, desc = "Pause" },
    --         { "<leader>dr", function() require("dap").repl.toggle() end, desc = "Toggle REPL" },
    --         { "<leader>ds", function() require("dap").session() end, desc = "Session" },
    --         { "<leader>dt", function() require("dap").terminate() end, desc = "Terminate" },
    --         { "<leader>dw", function() require("dap.ui.widgets").hover() end, desc = "Widgets" },
    --         { '<leader>dm', function() require('dap').terminate() require('dap').disconnect() require('dap').close() require("dapui").toggle({}) end, desc = "Force Terminate" },
    --     },
    --     config = function()
    --         -- load mason-nvim-dap here, after all adapters have been setup
    --         if LazyVim.has("mason-nvim-dap.nvim") then
    --             require("mason-nvim-dap").setup(LazyVim.opts("mason-nvim-dap.nvim"))
    --         end
    --
    --         vim.api.nvim_set_hl(0, "DapStoppedLine", { default = true, link = "Visual" })
    --
    --         for name, sign in pairs(LazyVim.config.icons.dap) do
    --             sign = type(sign) == "table" and sign or { sign }
    --             vim.fn.sign_define(
    --                 "Dap" .. name,
    --                 { text = sign[1], texthl = sign[2] or "DiagnosticInfo", linehl = sign[3], numhl = sign[3] }
    --             )
    --         end
    --
    --         -- setup dap config by VsCode launch.json file
    --         local vscode = require("dap.ext.vscode")
    --         local json = require("plenary.json")
    --         vscode.json_decode = function(str)
    --             return vim.json.decode(json.json_strip_comments(str))
    --         end
    --
    --         -- Extends dap.configurations with entries read from .vscode/launch.json
    --         if vim.fn.filereadable(".vscode/launch.json") then
    --             vscode.load_launchjs()
    --         end
    --     end,
    -- },
}
